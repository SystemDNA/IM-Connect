@page "/newsexpand/{id:int}/{eventid:int}/{fkicountryid:int}/{countryname}/{title}"
@using MauiApp1.Services
@using MauiApp1.Components.Models
@inject NewsExpandingService ExpandingNews
@inject ShareService ShareService


@if (NewsExpanding == null)
{
    @* <p>Loading events...</p> *@
    <div class="loader-container">
        <div class="im-loader">
            <span class="im-text">IM</span>
            <div class="im-spinner"></div>
        </div>
    </div>
}
else if (NewsExpanding.Count > 0)
{
    <div class="page-title d-flex px-3 pt-4 pb-0 align-items-center justify-content-center">
        <NavLink href="@($"/templatecontent/{eventid}/{fkicountryid}/{countryname}/{title}")" class="back-btn pf-icon d-flex align-items-center py-3 pe-3">
            <i class="fas fa-chevron-left fs-5"></i>
        </NavLink>
    </div>
    <div class="content-section container">
        <div class="container notification-list">
            <ul class="row gap-2">
                @foreach (var item in NewsExpanding)
                {
                    <i class="fas fa-share-alt" @onclick="() => SharePage(item.sFullContent)" style="cursor:pointer;"></i>
                    <li class="col-12 col-sm-6 rounded shadow-lg-light">
                        @((MarkupString)item.sFullContent)
                    </li>
                }
            </ul>
        </div>
    </div>
}

@code {
    [Parameter] public int id { get; set; }
    [Parameter] public int eventid { get; set; }
    [Parameter] public int fkicountryid { get; set; }
    [Parameter] public string countryname { get; set; } = string.Empty;
    [Parameter] public string title { get; set; } = string.Empty;

    private string ShareContent = "";
    private List<ExpandingData> NewsExpanding;
    private string ShareContentAll => string.Join("\n", NewsExpanding.Select(x => ShareService.StripHtmlTags(x.sFullContent)));

    protected override async Task OnInitializedAsync()
    {
        try
        {
            NewsExpanding = await ExpandingNews.GetNewsExpandingDataAsync(id);
        }
        catch (Exception ex)
        {
            Console.WriteLine("Error loading ExpandingNews method: " + ex.Message);
            NewsExpanding = new List<ExpandingData>();
        }
    }
    private async Task SharePage(string content)
    {
        var plainText = ShareService.StripHtmlTags(content);
        await ShareService.ShareText(plainText, "Share News");
    }
}
