@page "/newsexpand/{id:int}/{Templateeventid:int}/{fkicountryid:int}/{countryname}/{firsttitle}/{title}/{templateid:int}/{eventid:int}"
@using MauiApp1.Services
@using MauiApp1.Components.Models
@inject NewsExpandingService ExpandingNews
@inject ShareService ShareService
@inject NavigationManager Navigation

@* //space top bottom *@
@using MauiApp1.Components.Layout
@layout MainLayout
@inherits LayoutComponentBase

@* <header class="header header-fixed">
    <div class="header-content">
        <div class="left-content">
            <NavLink href="@($"/templatecontent/{templateid}/{Templateeventid}/{countryname}/{firsttitle}/{title}/{fkicountryid}")" class="back-btn pf-icon d-flex align-items-center py-3 pe-3">
                <i class="fas fa-chevron-left fs-5"></i>
            </NavLink>
        </div>
        <div class="mid-content"></div>
        <div class="right-content"></div>
    </div>
    <div class="header-curv"></div>
</header> *@
@if (NewsExpanding == null)
{
    @* <p>Loading events...</p> *@
    <div class="loader-container">
        <div class="im-loader">
            <span class="im-text">IM</span>
            <div class="im-spinner"></div>
        </div>
    </div>
}
else if (NewsExpanding.Count > 0)
{
    <div class="content-section container FullContentView">
        <NavLink href="@($"/templatecontent/{eventid}/{fkicountryid}/{countryname}/{firsttitle}/{title}")" class="btn-close FullContentViewClose"></NavLink>
        @foreach (var item in NewsExpanding)
        {            
            <div class="card">
                <div class="card-body">
                    @((MarkupString)item.sFullContent)
                </div>
                <div class="card-footer d-flex">
                    <a class="btn fas fa-share-alt ms-auto" @onclick="() => SharePage(item.sFullContent)"></a>
                </div>
            </div>
        }
    </div>
}

@code {
    [Parameter] public int id { get; set; }
    [Parameter] public int templateid { get; set; }
    [Parameter] public int Templateeventid { get; set; }
    [Parameter] public int eventid { get; set; }
    [Parameter] public int fkicountryid { get; set; }
    [Parameter] public string countryname { get; set; } = string.Empty;
    [Parameter] public string title { get; set; } = string.Empty;
    [Parameter] public string firsttitle { get; set; } = string.Empty;

    [CascadingParameter] private MainLayout? MainLayout { get; set; }//space top bottom function

    private string ShareContent = "";
    private List<ExpandingData> NewsExpanding;
    private string ShareContentAll => string.Join("\n", NewsExpanding.Select(x => ShareService.StripHtmlTags(x.sFullContent)));
    private bool spacingSet = false;//space top bottom function
    protected override async Task OnInitializedAsync()
    {
        try
        {
            NewsExpanding = await ExpandingNews.GetNewsExpandingDataAsync(id);
            if (NewsExpanding.Count==0)
            {
                Navigation.NavigateTo($"/templatecontent/{templateid}/{eventid}/{countryname}/{firsttitle}/{title}/{fkicountryid}");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine("Error loading ExpandingNews method: " + ex.Message);
            NewsExpanding = new List<ExpandingData>();
        }
    }
    private async Task SharePage(string content)
    {
        var plainText = ShareService.StripHtmlTags(content);
        await ShareService.ShareText(plainText, "Share News");
    }
    // Optional: Call swiper on first render
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            MainLayout.SetPageSpacing(top: true, bottom: false);//space top bottom function
            spacingSet = true;//space top bottom function
        }
    }
}
