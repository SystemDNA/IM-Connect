@page "/templatecontent/{templateid:int}/{eventid:int}/{countryname}/{firsttitle}/{title}/{fkicountryid:int}"
@using MauiApp1.Services
@using MauiApp1.Components.Models
@inject TemplateService TemplateDataService
@inject NavigationManager Navigation

<header class="header page-title shadow-none bg-transparent">
    <div class="header-content">
        <div class="left-content">
            <NavLink href="@($"/eventsdata/{eventid}/{fkicountryid}/{countryname}/{firsttitle}")" class="back-btn pf-icon d-flex align-items-center py-3 pe-3">
                <i class="fas fa-chevron-left fs-5"></i>
            </NavLink>
            <div>
                <h2 class="fw-bold m-0">@countryname</h2>
                <p class="m-0 small fw-bold text-primary">@firsttitle / @title</p>
            </div>
        </div>
    </div>
</header>
@if (TemplateDataContent == null)
{
    <div class="loader-container">
        <div class="im-loader">
            <span class="im-text">IM</span>
            <div class="im-spinner"></div>
        </div>
    </div>
}
else if (TemplateDataContent.Count == 0)
{
    <p>No content found.</p>
}
else
{
    
    <div class="container content-section">
    @foreach (var item in TemplateDataContent)
    {
        <div class="row">
                <a href="@($"/newsexpand/{item.id}/{item.fKiEventID}/{item.fKiCountryID}/{countryname}/{firsttitle}/{title}/{templateid}/{eventid}")" class="col-sm-12">
                <div class="card mb-3">
                        <div>
                            @((MarkupString)"<h1 class='test'>Hello World</h1><p>This is rendered as HTML</p>")
                        </div>
                        <div class="card-body shadow-sm">
                            @if (item.imagePath != null && item.imagePath!="")
                            {
                        <div class="img-container mb-3"><img src="@item.imagePath" /></div>
                            }
                            @if (item.sContent!=null){
                        <div class="bg-white">
                           @((MarkupString)@item.sContent)
                        </div>
                            }
                    </div>
                </div>
            </a>
        </div>
    }
    </div>
}



@code {
    [Parameter] public int templateid { get; set; }
    [Parameter] public int fkicountryid { get; set; }
    [Parameter] public int eventid { get; set; }
    [Parameter] public string countryname { get; set; } = string.Empty;
    [Parameter] public string title { get; set; } = string.Empty;
    [Parameter] public string firsttitle { get; set; } = string.Empty;

    private List<TemplateDataContent> TemplateDataContent;
    readonly Dictionary<string, string> ActiveTabs = new();

    protected override async Task OnParametersSetAsync()
    {
        try
        {
            TemplateDataContent = null; // show loading
            TemplateDataContent = await TemplateDataService.GetContentData(templateid, fkicountryid);


        }
        catch (Exception ex)
        {
            Console.WriteLine("Error loading template content: " + ex.Message);
            TemplateDataContent = new List<TemplateDataContent>();
        }
    }   

}
