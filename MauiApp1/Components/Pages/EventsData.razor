@page "/eventsdata/{id:int}/{countryname}/{titlename}"
@using MauiApp1.Services
@using MauiApp1.Components.Models
@inject EventsDataService ListofEventDataService
@inject SelectedCountryService SelectedCountryService
@inject NewsService NewsService
@inject NavigationManager Navigation


<div class="page-title d-flex px-3 pt-4 pb-0 align-items-center justify-content-center">
    <NavLink href="@($"/countrydata/{id}/{countryname}")" class="back-btn pf-icon d-flex align-items-center py-3 pe-3">
        <i class="fas fa-chevron-left fs-5"></i>
     </NavLink>
    <h1>@countryname<span class="fs-6"> / </span><span class="fs-6 text-primary">@titlename</span></h1>
    @* <NavLink class="btn btn-sm text-muted ms-auto" href="/countrylist"><i class="fas fa-home"></i> Home</NavLink> *@
</div>
 
@if (EventsDataList == null)
{
    @* <p>Loading events...</p> *@
    <div class="loader-container">
        <div class="im-loader">
            <span class="im-text">IM</span>
            <div class="im-spinner"></div>
        </div>
    </div>
}
else if (EventsDataList.Count > 0)
{
    <div class="content-section container">
        <div class="container notification-list">
            <ul class="row gap-2">
                @foreach (var p in EventsDataList)
                {
                <li class="col-12 col-sm-6 rounded shadow-lg-light">
                    <a class="media align-items-center" href="@($"/templatecontent/{p.id}/{p.fKiCountryDataId}/{countryname}/{@p.sTitle}")">
                        <div class="media-50 rounded-3 border d-flex align-items-center justify-content-center">
                            <span class="fas fs-10 icon-@p.sTitle text-color"></span>
                        </div>
                        @* <img src="@p.ImagePath" alt="" /> *@
                        <div class="list-content"><span class="title fs-8">@p.sTitle</span></div>
                        <span class="fas fa-chevron-right ms-auto text-muted"></span>
                    </a>
                </li>
                }
            </ul>
        </div>
    </div>
    <div class="content-section container">
        <div class="latest-news-section">
            <h2 class="fw-bold text-primary">Latest News</h2>
            @if (newsItems == null)
            {
                @* <p>Loading latest news...</p> *@
                <div class="loader-container">
                    <div class="im-loader">
                        <span class="im-text">IM</span>
                        <div class="im-spinner"></div>
                    </div>
                </div>
            }
            else if (newsItems.Count > 0)
            {
                <div class="notification-list">
                    <ul class="list-group gap-2">
                @foreach (var news in newsItems)
                        {
                            <li class="list-group-item border-0 rounded-3">
                                <div class="media">
                                @* <a href="#" class="media" @onclick="@(() => OpenPanel("panel-1"))" @onclick:preventDefault> *@
                                    <div class="media-50 rounded-3 border">
                                     <img src="@news.imagePath" alt="">
                                    </div>
                                    <div class="list-content">
                                        <h6 class="small text-primary m-0 fw-bold">IM News</h6>
                                        <h6 class="title ellips1">@news.sName</h6>
                                    <a href="@($"/latestnews/{@news.id}/{news.fkiCountryID}/{countryname}/{titlename}")">
                                        @news.sContent
                                    </a>
                                    @* <div @onclick="() => ToggleText(news)"
                                         class="@GetCssClass(news)"
                                         title="@news.Content">
                                        @news.Content
                                    </div> *@
                                    </div>
                                @* </a> *@
                                </div>
                            </li>
                        }
                    </ul>
                </div>
            
            }

        </div>
    </div>
}
<style>
    .truncate-text {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        display: block;
        width: 300px; /* adjust as needed */
        cursor: pointer;
    }

    .expanded-text {
        white-space: normal;
        display: block;
        width: 300px; /* match the width or make it auto */
        cursor: pointer;
    }
</style>

@code {
    [Parameter] public int id { get; set; }
    [Parameter] public string countryname { get; set; } = string.Empty;
    [Parameter] public string titlename { get; set; } = string.Empty;

    

    private List<News> newsItems;
    private List<EventItem> EventsDataList;
    private Dictionary<string, string> tabDisplayNames = new();
    private string activeTab = "";

    protected override async Task OnInitializedAsync()
    {
        try
        {
            EventsDataList = await ListofEventDataService.GetEventsByCountryId(id);
            newsItems = await NewsService.GetNewsAsync(id,0);
            if (EventsDataList != null && EventsDataList.Count > 0)
            {
                activeTab = EventsDataList[0].sTitle.ToLower();
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine("Error loading events: " + ex.Message);
            EventsDataList = new List<EventItem>();
        }
    }

    string GetCssClass(News item)
    {
        return item.isExpanded ? "expanded-text" : "truncate-text";
    }
    void ToggleText(News item)
    {
        item.isExpanded = !item.isExpanded;
    }
}
