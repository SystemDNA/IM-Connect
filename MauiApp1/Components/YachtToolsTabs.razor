@using MauiApp1.Services
<div class="dialog-overlay" @attributes="AdditionalAttributes">
    <div class="dialog-content bg-white position-relative" style="width: 100%;height: 100%;">
        <button class="btn-close position-absolute top-0 end-0 m-3" @onclick="CloseDialog"></button>

        @* <ul class="nav nav-tabs p-4 pb-0" role="tablist">
        <li class="nav-item">
            <button class="nav-link @(activeTab == "emission" ? "active" : "")"
                    @onclick="@(() => SetActiveTab("emission"))" type="button">
                Emission
            </button>

        </li>
        <li class="nav-item">
            <button class="nav-link @(activeTab == "cert" ? "active" : "")"
                    @onclick="@(() => SetActiveTab("cert"))" type="button">
                Certificates
            </button>
        </li>
    </ul> *@
        @* <div class="tabs-container">
            <button class="tab-button @(activeTab == "emission" ? "active" : "")" @onclick="@(() => activeTab = "emission")">
                Emission
            </button>
            <button class="tab-button @(activeTab == "cert" ? "active" : "")" @onclick="@(() => activeTab = "cert")">
                Certificates
            </button>
        </div> *@
        <div class="dialog-header d-flex justify-content-between align-items-center">
            <div class="tabs-container flex-grow-1">
                <button class="tab-button @(activeTab == "emission" ? "active" : "")" @onclick="@(() => SetActiveTab("emission"))">Emission</button>
                <button class="tab-button @(activeTab == "result" ? "active" : "")" @onclick="@(() => SetActiveTab("result"))">Result</button>
                @* <button class="tab-button @(activeTab == "cert" ? "active" : "")" @onclick="@(() => SetActiveTab("cert"))">Certificates</button> *@
            </div>
            <button class="btn-close-tab" @onclick="CloseDialog" aria-label="Close">
                <i class="fas fa-times"></i>
            </button>
        </div>


        <div class="tab-content m-0 p-0">
            @if (activeTab == "emission")
            {
                <div class="tab-pane fade show active">
                    @* <EmissionTab /> *@
                    <EmissionTab OnResultCalculated="HandleResultCalculated" />
                </div>
            }
            else if (activeTab == "result")
            {
                <div class="tab-pane fade show active">
                    <ResultTab Result="result" />
                </div>
            }
            @* else if (activeTab == "cert")
            {
                <div class="tab-pane fade show active">
                    <CertificatesTab />
                </div>
            } *@
        </div>
    </div>
</div>
@code {
    [Parameter] public EventCallback OnClose { get; set; }
    [Parameter(CaptureUnmatchedValues = true)] public Dictionary<string, object> AdditionalAttributes { get; set; } = new();

    private string activeTab = "emission";
    private YachtEmissionCalculator.EmissionResult? result;

    private void SetActiveTab(string tab)
    {
        activeTab = tab;
    }

    private void HandleResultCalculated(YachtEmissionCalculator.EmissionResult calculatedResult)
    {
        result = calculatedResult;
        SetActiveTab("result");
    }

    private async Task CloseDialog()
    {
        if (OnClose.HasDelegate)
        {
            await OnClose.InvokeAsync();
        }
    }
}